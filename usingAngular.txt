TypeScript
declaring array        Production:any[];

strong type in TypeScript

interface are supported in typescript but not in ES5, so transpiled.
interface are used like classic type.
export interface IProduct{}


THe usage of interface is to enforce strongly typed checking for objects in typeScript...


data-binding:
    interpolation {{}}
    property binding [attr]='component property'
    event binding (event)='component property'  the property can have getter and setter
    two way binding [()]



bootStrap Angular:
main.ts file, which has a line of code 
    platforBrowserDynamic().bootstrapModule(AppModule)
     this line point our AppModule to the start point, 
     in index.html we can directly use component based dirrective for angular app.


Component lifecycle:

    class can implement OnInit
        ngOnInit():void{}

Custom filter

    class need to be decored as @Pipe from @angular/core
    class need to implement PipeTransform
        transform(value:string,charactor:string):string

component communications
        @Input bind by property pass data into child component
        @Output  bind by event, child will raise the event and parent component can behave upon those event

Services and Dependency Injection
            create service class add @Injectable
            define scope by add providedIn properties 
            Dependency Injection will happening in the constructor of the comsumer (e.g. component)

Http service and observables
            Import HttpClientModule into App.Module
            In the service class, inject HttpClient instance into constructor
            invoke http methods in service class method and use rxjs operator (pipe, tap, catchError)
            create error handling method in service class
            At consumer side, use subscribe method to consume observable and assign returned JSON to properties,
            subscribe(nextFx,ErrorFn,SuccessFn)


angular cli 
        ng g c products/product-detail --flat

Routing
        -define base element in index.html
        -Add RouterModule in App.Module.ts
        -Add each Route (RouterModule.forRoot)
        -Order Matters
        -'' for default Route
        -'**' for wildcard Route
        -No leading slash
        Add RouterLink directive as attribute [RouterLink]="['/welcome']"
        Specify <router-outlet> for view display

Routing parameter
        {path: 'products/:id', component: ProductDetailComponent}
        [routerLink]=['/products', product.productId]
        constructor(private router: ActiveRoute){
            console.log(this.route.snapshot.paramMap.get('id'));
        }

route guard